[project]
name = "mcp_second_brain"
version = "0.3.2"
description = "Local MCP \"Second-Brain\" server with prompt-safe file inlining and vector-store attachments."
authors = [{name = "Your Name"}]
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "fastmcp>=0.5.0",
    "openai>=1.62.0",
    "google-genai>=0.8.0",
    "tiktoken>=0.8.0",
    "lxml>=5.3.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
]

[project.scripts]
mcp-second-brain = "mcp_second_brain.server:main"

[project.optional-dependencies]
test = [
    "pytest>=7.4",
    "pytest-asyncio>=0.21",
    "anyio>=4.0",
    "pytest-mock>=3.11",
    "pytest-timeout>=2.1",
    "pytest-cov>=4.0",
    "httpx>=0.25",
    "coverage[toml]>=7.3",
]

dev = [
    "ruff>=0.1",
    "mypy>=1.7",
    "pre-commit>=3.5",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
timeout = 10  # 10 seconds default timeout for unit tests
addopts = "--strict-markers --tb=short"
markers = [
    "asyncio: Mark test as requiring asyncio",
    "anyio: Mark test as requiring anyio",
    "e2e: End-to-end tests that require Docker",
    "slow: Tests that take more than 10 seconds",
    "integration: Integration tests that may require external services",
]
# Note: plugins loading moved to conftest.py for better compatibility

[tool.coverage.run]
source = ["mcp_second_brain"]
omit = ["*/tests/*", "*/main.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

# Ignore descriptor-related type errors in definitions.py
[[tool.mypy.overrides]]
module = "mcp_second_brain.tools.definitions"
disable_error_code = ["assignment"]

# Ignore descriptor-related type errors in gemini_search.py
[[tool.mypy.overrides]]
module = "mcp_second_brain.tools.gemini_search"
disable_error_code = ["assignment"]
