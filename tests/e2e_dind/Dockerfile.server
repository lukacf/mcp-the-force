FROM python:3.13-slim

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        curl \
        ca-certificates \
        procps && \
    rm -rf /var/lib/apt/lists/*

# Install uv for faster Python package management
RUN pip install uv

# Set working directory
WORKDIR /app

# Copy project files
COPY pyproject.toml README.md ./
COPY mcp_second_brain ./mcp_second_brain
COPY *.md *.py ./

# Install the package and dependencies
RUN uv pip install --system .

# Install LoiterKiller dependencies and copy its code
COPY loiter_killer/requirements.txt /loiter_killer/requirements.txt
RUN pip install --no-cache-dir -r /loiter_killer/requirements.txt

COPY loiter_killer/loiter_killer.py /loiter_killer/loiter_killer.py

# Create directories for runtime
RUN mkdir -p /tmp && chmod 1777 /tmp
RUN mkdir -p /app/data  # For LoiterKiller data

# Create a startup script that runs both LoiterKiller and MCP server
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "=== Starting E2E server container ==="\n\
\n\
# Set PYTHONPATH for LoiterKiller\n\
export PYTHONPATH=/loiter_killer:$PYTHONPATH\n\
\n\
# Start LoiterKiller in the background\n\
echo "Starting LoiterKiller..."\n\
cd /app/data\n\
python /loiter_killer/loiter_killer.py > /tmp/loiter_killer.log 2>&1 &\n\
LOITER_PID=$!\n\
echo "LoiterKiller started with PID $LOITER_PID"\n\
\n\
# Wait for LoiterKiller to be ready\n\
echo "Waiting for LoiterKiller to be ready..."\n\
for i in {1..30}; do\n\
    if curl -s http://localhost:9876/health > /dev/null 2>&1; then\n\
        echo "LoiterKiller is ready!"\n\
        break\n\
    fi\n\
    if [ $i -eq 30 ]; then\n\
        echo "LoiterKiller failed to start"\n\
        echo "LoiterKiller logs:"\n\
        cat /tmp/loiter_killer.log || true\n\
        exit 1\n\
    fi\n\
    echo "  Waiting... ($i/30)"\n\
    sleep 1\n\
done\n\
\n\
# Keep the container running\n\
echo "Container ready - LoiterKiller running on PID $LOITER_PID"\n\
tail -f /dev/null\n\
' > /startup.sh && chmod +x /startup.sh

# Create a simple health check script
RUN echo '#!/bin/bash\n\
# Check if LoiterKiller is running\n\
if ! curl -s http://localhost:9876/health > /dev/null; then\n\
    echo "LoiterKiller is not responding"\n\
    exit 1\n\
fi\n\
echo "LoiterKiller is healthy"\n\
exit 0\n\
' > /health.sh && chmod +x /health.sh

# No port exposure needed - MCP runs over stdio

# Add health check
HEALTHCHECK --interval=5s --timeout=3s --retries=10 --start-period=10s \
    CMD /health.sh

# Run the startup script by default
CMD ["/startup.sh"]